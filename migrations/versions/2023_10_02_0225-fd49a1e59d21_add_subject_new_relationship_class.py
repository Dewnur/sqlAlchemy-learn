"""add subject, new relationship class

Revision ID: fd49a1e59d21
Revises: ebf7108276d4
Create Date: 2023-10-02 02:25:09.753014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd49a1e59d21'
down_revision: Union[str, None] = 'ebf7108276d4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subject',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('class_group')
    op.drop_table('class_teacher')
    op.add_column('class', sa.Column('subject_id', sa.Uuid(), nullable=False))
    op.add_column('class', sa.Column('group_id', sa.Uuid(), nullable=False))
    op.add_column('class', sa.Column('teacher_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'class', 'subject', ['subject_id'], ['id'])
    op.create_foreign_key(None, 'class', 'group', ['group_id'], ['id'])
    op.create_foreign_key(None, 'class', 'teacher', ['teacher_id'], ['id'])
    op.drop_column('class', 'description')
    op.drop_column('class', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('class', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('class', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'class', type_='foreignkey')
    op.drop_constraint(None, 'class', type_='foreignkey')
    op.drop_constraint(None, 'class', type_='foreignkey')
    op.drop_column('class', 'teacher_id')
    op.drop_column('class', 'group_id')
    op.drop_column('class', 'subject_id')
    op.create_table('class_teacher',
    sa.Column('class_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], name='class_teacher_class_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], name='class_teacher_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('class_id', 'teacher_id', 'id', name='class_teacher_pkey')
    )
    op.create_table('class_group',
    sa.Column('class_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], name='class_group_class_id_fkey'),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='class_group_group_id_fkey'),
    sa.PrimaryKeyConstraint('class_id', 'group_id', 'id', name='class_group_pkey')
    )
    op.drop_table('subject')
    # ### end Alembic commands ###
